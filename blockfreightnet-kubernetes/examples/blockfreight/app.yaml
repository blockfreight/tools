%YAML 1.2
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
  name: blockfreight
  labels:
    app: blockfreight
spec:
  type: LoadBalancer
  ports:
    - port: 8888
      targetPort: 8888
      name: p2p
    - port: 24365
      targetPort: 46657
      name: rpc
    - port: 80
      name: http
  selector:
    app: bftx
...
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
  name: blockfreight-api
  labels:
    app: blockfreight-api
spec:
  type: LoadBalancer
  sessionAffinity: ClientIP
  ports:
    - port: 8080
      targetPort: 12345
  selector:
    app: bftx
...
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bftx-config
data:
  seeds: 'bftx0,bftx1,bftx2,bftx3'
  validators: 'bftx0,bftx1,bftx2,bftx3'
  validator.power: '10'
  genesis.json: |-
    {
      "genesis_time": "2016-04-26T22:00:00Z",
      "chain_id": "chain-IdealX",
      "validators": [],
      "app_hash": ""
    }
  pub_key_nginx.conf: |-
    server {
      listen 80 default_server;
      listen [::]:80 default_server ipv6only=on;
    }
...
---
apiVersion: v1
kind: ConfigMap
data:
  genesis.json: |-
    {
        "chain_id":"chain-idealX",
        "app_options":{
            "accounts":[
              {
                  "pub_key":"bftx0"
              }
            ]
        }
      }
metadata:
  name: app-config
...
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: bftx-budget
spec:
  selector:
    matchLabels:
      app: bftx
  minAvailable: 2
...
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: bftx
spec:
  selector:
    matchLabels:
      app: bftx
  serviceName: blockfreight
  replicas: 1
  template:
    metadata:
      labels:
        app: bftx
    spec:
      containers:
        - name: tm
          imagePullPolicy: IfNotPresent
          image: 'tendermint/tendermint:0.20.0'
          ports:
            - containerPort: 46656
              name: p2p
            - containerPort: 46657
              name: rpc
          env:
            - name: SEEDS
              valueFrom:
                configMapKeyRef:
                  name: bftx-config
                  key: seeds
            - name: VALIDATOR_POWER
              valueFrom:
                configMapKeyRef:
                  name: bftx-config
                  key: validator.power
            - name: VALIDATORS
              valueFrom:
                configMapKeyRef:
                  name: bftx-config
                  key: validators
            - name: TMHOME
              value: /tendermint
            - name: VALIDATOR_NAME
              value: <VALIDATOR_NAME>
            - name: private_type
              valueFrom:
                secretKeyRef:
                  name: node_private_keys
                  key: private_type
            - name: private_key
              valueFrom:
                secretKeyRef:
                  name: node_private_keys
                  key: private_key            
            - name: private_node_key
              valueFrom:
                secretKeyRef:
                  name: node_private_keys
                  key: private_node_key
          command:
            - /bin/sh
            - '-c'
            - >
              set -ex

              echo $private_key
              echo $private_node_key

              mkdir /tendermint/config

              # Creating genesis.json

              curl -L https://raw.githubusercontent.com/blockfreight/tools/master/blockfreightnet-kubernetes/examples/blockfreight/genesis.json > $TMHOME/config/genesis.json

              # Creating node_key.json

              curl -L https://raw.githubusercontent.com/blockfreight/tools/master/blockfreightnet-kubernetes/examples/blockfreight/validators/$VALIDATOR_NAME/node_key.json > $TMHOME/config/node_key.json

              # Creating priv_validator.json

              curl -L https://raw.githubusercontent.com/blockfreight/tools/master/blockfreightnet-kubernetes/examples/blockfreight/validators/$VALIDATOR_NAME/priv_validator.json > $TMHOME/config/priv_validator.json

              # Creating config.toml

              curl -L https://raw.githubusercontent.com/blockfreight/tools/master/config.toml > $TMHOME/config.toml

              cp $TMHOME/config.toml /tendermint/config/config.toml

              # Starting Tendermint

              tendermint node --moniker="`hostname`" --p2p.seeds="0ce024c57fc1137bfbee70a1e520fba4c9163fbe@bftx0.blockfreight.net:8888,0537b4c4800b810858dc554e65f85b76217ff900@bftx1.blockfreight.net:8888,5a4833829cc5cec95a6194fb16e3ad75b605968b@bftx2.blockfreight.net:8888,5fe8f8847e4b87c6eea350bcd55269d3c492ffcb@bftx3.blockfreight.net:8888" --proxy_app="tcp://localhost:46658" --consensus.create_empty_blocks=false
        - name: app
          imagePullPolicy: Always
          image: 'blockfreight/go-bftx:rc1'
          ports:
            - containerPort: 12345
            - containerPort: 46658
          env:
            - name: BFTXHOME
              value: /go/src/github.com/blockfreight/go-bftx
            - name: LOCAL_RPC_CLIENT_ADDRESS
              value: 'tcp://localhost:46657'
          workingDir: /go/src/github.com/blockfreight/go-bftx
          command:
            - bash
            - '-c'
            - |
              set -ex

              rm -f /socks/app.sock # remove old socket
              bftnode start
        - name: pub-key
          imagePullPolicy: IfNotPresent
          image: nginx
          ports:
            - containerPort: 80
              name: http
            - containerPort: 8080
          command:
            - bash
            - '-c'
            - >
              set -ex

              # fixes 403 Permission Denied (open() "/tendermint/pub_key.json"
              failed (13: Permission denied))

              # => we cannot serve from /tendermint, so we copy the file

              mkdir -p /usr/share/nginx

              mkdir -p /etc/nginx/html

              cd /etc/nginx/html

              touch index.html

              cat > index.html << EOL   
                <!DOCTYPE html PUBLIC"ISO/IEC 15445:2000//DTD HTML//EN"><html><head><title></title></head><body><p>Blockfreight.</body></html>
              EOL

              nginx -g "daemon off;"
          volumeMounts:
            - name: tmdir
              mountPath: /tendermint
            - name: appdir
              mountPath: /app
            - mountPath: /etc/nginx/conf.d/pub_key.conf
              name: tmconfigdir
              subPath: pub_key_nginx.conf
      volumes:
        - name: tmconfigdir
          configMap:
            name: bftx-config
        - name: appconfigdir
          configMap:
            name: app-config
        - name: socksdir
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: tmdir
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
    - metadata:
        name: appdir
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 12Mi
  updateStrategy:
    type: RollingUpdate
...
